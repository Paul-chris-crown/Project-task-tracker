// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  role      String   @default("MEMBER")
  preferences String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  ownedProjects Project[] @relation("ProjectOwner")
  assignedTasks Task[]    @relation("TaskAssignee")
  createdTasks Task[]     @relation("TaskCreator")

  @@map("users")
}

model AllowedUser {
  id        String   @id @default(cuid())
  email     String   @unique
  role      String   // 'ADMIN' or 'MEMBER'
  createdAt DateTime @default(now())

  @@map("allowed_users")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  status      String   @default("ACTIVE")
  startDate   DateTime?
  dueDate     DateTime?
  ownerId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  owner User   @relation("ProjectOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  tasks Task[]

  @@map("projects")
}

model Task {
  id          String   @id @default(cuid())
  projectId   String
  title       String
  description String?
  status      String   @default("TODO")
  dueDate     DateTime?
  assigneeId  String?
  createdById String   // Track who created the task
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assignee User?  @relation("TaskAssignee", fields: [assigneeId], references: [id])
  creator User    @relation("TaskCreator", fields: [createdById], references: [id], onDelete: Cascade)

  @@map("tasks")
}
